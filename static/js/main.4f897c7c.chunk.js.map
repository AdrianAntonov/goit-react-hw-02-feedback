{"version":3,"sources":["components/Section/Section.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions .js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","Statistics","this","props","good","neutral","bad","total","positivePercentage","Component","FeedbackOptions","options","map","item","className","styles","button","onClick","onLeaveFeedback","id","name","Notification","message","App","state","count","arg","setState","prevState","alert","countTotalFeedback","toFixed","countPositiveFeedbackPercentage","buttons","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"kOAgBeA,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,gCACE,6BAAKD,IACJC,MCoBQC,EAvBf,4JAOE,WACE,MAA0DC,KAAKC,MAAvDC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,mBAEnC,OACE,gCACE,oDACA,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,GAA0C,EAAjE,cAjBR,GAAgCC,a,gBCwBjBC,EAvBf,4JAME,WAAU,IAAD,OACP,OACE,8BACGR,KAAKC,MAAMQ,QAAQC,KAAI,SAAAC,GAAI,OAC1B,wBACEC,UAAWC,IAAOC,OAElBC,QAAS,kBAAM,EAAKd,MAAMe,gBAAgBL,EAAKM,KAHjD,SAKGN,EAAKO,MAHDP,EAAKM,aAZtB,GAAqCV,aCStBY,MAXf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OACE,8BACE,6BAAKA,OCuEIC,E,4MApEbC,MAAQ,CACNpB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPmB,MAAQ,SAAAC,GACN,OAAQA,GACN,KAAK,EACH,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BxB,KAAMwB,EAAUxB,KAAO,MAEzB,MACF,KAAK,EACH,EAAKuB,UAAS,SAAAC,GAAS,MAAK,CAC1BvB,QAASuB,EAAUvB,QAAU,MAE/B,MACF,KAAK,EACH,EAAKsB,UAAS,SAAAC,GAAS,MAAK,CAC1BtB,IAAKsB,EAAUtB,IAAM,MAEvB,MACF,QACEuB,MAAM,gC,EAIZC,mBAAqB,WACnB,MAA+B,EAAKN,MACpC,OADA,EAAQpB,KAAR,EAAcC,QAAd,EAAuBC,K,qEAIzB,WACE,IAAQF,EAASF,KAAKsB,MAAdpB,KACR,GAAIA,EAAO,EACT,OAASA,EAAOF,KAAK4B,qBAAwB,KAAKC,QAAQ,K,oBAI9D,WACE,MAA+B7B,KAAKsB,MAA5BpB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQL,KAAK4B,qBACbtB,EAAqBN,KAAK8B,kCAEhC,OACE,gCACE,cAAC,EAAD,CAASjC,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBY,QAASsB,EAASf,gBAAiBhB,KAAKuB,UAE3D,cAAC,EAAD,CAAS1B,MAAM,aAAf,SACGQ,EACC,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAAC,EAAD,CAAcc,QAAQ,+B,GA7DhBb,aCHlByB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kICP1BC,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.4f897c7c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nfunction Section({ title, children }) {\n  return (\n    <div>\n      <h2>{title}</h2>\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Statistics extends Component {\n  static propTypes = {\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n    positivePercentage: PropTypes.string,\n  };\n  render() {\n    const { good, neutral, bad, total, positivePercentage } = this.props;\n\n    return (\n      <div>\n        <h4>Statistics content</h4>\n        <p>Good: {good}</p>\n        <p>Neutral: {neutral}</p>\n        <p>Bad: {bad}</p>\n        <p>Total: {total}</p>\n        <p>Positive feedback: {positivePercentage ? positivePercentage : 0}%</p>\n      </div>\n    );\n  }\n}\n\nexport default Statistics;\n","import React, { Component } from 'react';\nimport styles from './FeedbackOptions.module.css';\nimport PropTypes from 'prop-types';\n\nexport class FeedbackOptions extends Component {\n  static propTypes = {\n    options: PropTypes.array,\n    onLeaveFeedback: PropTypes.func,\n  };\n\n  render() {\n    return (\n      <div>\n        {this.props.options.map(item => (\n          <button\n            className={styles.button}\n            key={item.id}\n            onClick={() => this.props.onLeaveFeedback(item.id)}\n          >\n            {item.name}\n          </button>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nfunction Notification({ message }) {\n  return (\n    <div>\n      <h3>{message}</h3>\n    </div>\n  );\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport default Notification;\n","import React, { Component } from 'react';\nimport buttons from './utils/buttons.json';\nimport Section from './components/Section';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  count = arg => {\n    switch (arg) {\n      case 1:\n        this.setState(prevState => ({\n          good: prevState.good + 1,\n        }));\n        break;\n      case 2:\n        this.setState(prevState => ({\n          neutral: prevState.neutral + 1,\n        }));\n        break;\n      case 3:\n        this.setState(prevState => ({\n          bad: prevState.bad + 1,\n        }));\n        break;\n      default:\n        alert('Missing option. Try again!');\n    }\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage() {\n    const { good } = this.state;\n    if (good > 0) {\n      return ((good / this.countTotalFeedback()) * 100).toFixed(1);\n    }\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={buttons} onLeaveFeedback={this.count} />\n        </Section>\n        <Section title=\"Statistics\">\n          {total ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\"></Notification>\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2XgU8\"};"],"sourceRoot":""}